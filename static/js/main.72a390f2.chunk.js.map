{"version":3,"sources":["firebaseConfig.js","stores/authStore.ts","components/Login/SignIn.tsx","components/Login/ImgDropzone.tsx","components/Login/SignUp.tsx","components/Login/Login.tsx","stores/genStore.ts","components/DashMenu/DashMenu.tsx","components/ProfileMenu/ProfileMenu.tsx","components/MainNavBar/MainNavBar.tsx","components/Home/Home.tsx","stores/projectsStore.ts","components/Projects/AudioDropzone.tsx","components/Projects/CreateProject/CreateProject.tsx","components/SearchBar/SearchBar.tsx","components/Projects/TopBar.tsx","components/Projects/ProjectCard.tsx","components/Projects/Projects.tsx","components/App/App.tsx","serviceWorker.ts","index.tsx"],"names":["require","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","db","auth","authStore","AuthStore","_this","this","Object","classCallCheck","initializerDefineProperty","_descriptor","_descriptor2","_descriptor3","_descriptor4","_descriptor5","_descriptor6","_descriptor7","_descriptor8","_descriptor9","_descriptor10","_descriptor11","_descriptor12","_descriptor13","onAuthStateChanged","retrievedUser","user","isLogged","statusChecked","getUserData","uid","console","log","isNewUSer","addNewUser","name","email","password","_this2","credentials","createUserWithEmailAndPassword","then","catch","error","errorCode","code","errorMessage","message","isError","alert","newUser","id","that","collection","add","docRef","userIDRetrieved","where","get","querySnapshot","forEach","doc","currentUserInfo","data","value","signInWithEmailAndPassword","window","history","go","currentUser","signOut","profilePhoto","fileContent","_this3","storage","ref","userEmail","currentEmail","userProfilePicture","split","child","getDownloadURL","url","xhr","XMLHttpRequest","responseType","onload","event","response","open","send","profilePhotoURL","observable","action","SignIn","observer","withRouter","formLoginProps","react_default","a","createElement","className","onSubmit","preventDefault","login","type","required","onChange","e","target","ImgDropzone","props","possibleConstructorReturn","getPrototypeOf","call","ImgDropzone_descriptor","assertThisInitialized","ImgDropzone_descriptor2","es","onDrop","acceptedFiles","reader","FileReader","file","result","readAsDataURL","_ref","getRootProps","getInputProps","style","display","src","alt","width","borderRadius","onClick","setProfilePhoto","Component","SignUp","formRegisterProps","Login_ImgDropzone","register","Login","_class2","_React$Component","Login_descriptor","Login_descriptor2","autorun","push","inherits","createClass","key","signin","signInForm","react","handleLoginState","borderBottom","padding","Login_SignIn","Login_SignUp","React","applyDecoratedDescriptor","prototype","configurable","enumerable","writable","initializer","Login_class","genStore","isDashOpen","section","isHomeActive","isProjectsActive","navBarTitle","DashMenu","openDash","onDahshNavClick","react_router","to","ProfileMenu","ProfileMenu_descriptor","ProfileMenu_descriptor2","ProfileMenu_descriptor3","ProfileMenu_descriptor4","ProfileMenu_descriptor5","ProfileMenu_descriptor6","ProfileMenu_descriptor7","ProfileMenu_descriptor8","showProfileMenu","profileBtnSelected","configBtnSelected","signOutBtnSelected","onMouseOver","onMouseOut","backgroundColor","profileBtnOver","configBtnOver","signOutBtnOver","MainNavBar","MainNavBar_descriptor","title","components_ProfileMenu_ProfileMenu","Home","Home_descriptor","components_DashMenu_DashMenu","components_MainNavBar_MainNavBar","projectsStore","ProjectsStore","projectsStore_descriptor","projectsStore_descriptor2","projectsStore_descriptor3","projectsStore_descriptor4","projectsStore_descriptor5","projectsStore_descriptor6","projectsStore_descriptor7","projectsStore_descriptor8","projectsStore_descriptor9","projectsStore_descriptor10","projectsStore_descriptor11","projectsStore_descriptor12","projectsStore_descriptor13","projectName","username","setAudioFileUploaded","today","Date","dd","getDate","mm","getMonth","yyyy","getFullYear","time","getHours","getMinutes","audioFileUploaded","audioName","putString","snapshot","retrieveAudioFile","audioFile","audioFileURL","showNewProjectForm","creationStep","stepTitle","setStepTitle","currentUsername","label","AudioDropzone","AudioDropzone_descriptor","AudioDropzone_descriptor2","setAudioName","uploadAudioFile","options","CreateProject","onStepBackClick","onCancelProjectCreation","placeholder","react_select_browser_esm","isMulti","classNamePrefix","monitoringSystems","monacDistribution","Projects_AudioDropzone","onNextStepClick","SearchBar","SearchBar_descriptor","onFocus","searchBarClicked","onBlur","borderColor","borderStyle","borderWidth","TopBar","components_SearchBar_SearchBar","onCreateProject","ProjectCard","date","Projects","Projects_descriptor","Projects_descriptor2","renderProjects","projects","map","project","Projects_ProjectCard","creationDate","Projects_TopBar","alignItems","length","alignContent","justifyContent","Projects_CreateProject_CreateProject","App","react_router_dom","exact","path","component","Boolean","location","hostname","match","ReactDOM","render","src_components_App_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"udAGAA,EAAQ,IACRA,EAAQ,IACRA,EAAQ,IAaRC,gBAXe,CACbC,OAAQ,0CACRC,WAAY,gCACZC,YAAa,uCACbC,UAAW,gBACXC,cAAe,4BACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAKV,iJAAMC,GAAKT,cAELU,IADUV,YACFA,UCiNNW,GAFG,iBA9MhB,SAAAC,IAAc,IAAAC,EAAAC,KAAAC,OAAAC,EAAA,EAAAD,CAAAD,KAAAF,GAAAG,OAAAE,EAAA,EAAAF,CAAAD,KAAA,OAAAI,EAAAJ,MAAAC,OAAAE,EAAA,EAAAF,CAAAD,KAAA,QAAAK,EAAAL,MAAAC,OAAAE,EAAA,EAAAF,CAAAD,KAAA,UAAAM,EAAAN,MAAAC,OAAAE,EAAA,EAAAF,CAAAD,KAAA,YAAAO,EAAAP,MAAAC,OAAAE,EAAA,EAAAF,CAAAD,KAAA,WAAAQ,EAAAR,MAAAC,OAAAE,EAAA,EAAAF,CAAAD,KAAA,gBAAAS,EAAAT,MAAAC,OAAAE,EAAA,EAAAF,CAAAD,KAAA,eAAAU,EAAAV,MAAAC,OAAAE,EAAA,EAAAF,CAAAD,KAAA,eAAAW,EAAAX,MAAAC,OAAAE,EAAA,EAAAF,CAAAD,KAAA,kBAAAY,EAAAZ,MAAAC,OAAAE,EAAA,EAAAF,CAAAD,KAAA,kBAAAa,EAAAb,MAAAC,OAAAE,EAAA,EAAAF,CAAAD,KAAA,cAAAc,EAAAd,MAAAC,OAAAE,EAAA,EAAAF,CAAAD,KAAA,UAAAe,EAAAf,MAAAC,OAAAE,EAAA,EAAAF,CAAAD,KAAA,kBAAAgB,EAAAhB,MAEZJ,GAAKqB,mBAAmB,SAACC,GACnBA,GAEFnB,EAAKoB,KAAOD,EACZnB,EAAKqB,UAAW,EAChBrB,EAAKsB,eAAgB,EACrBtB,EAAKuB,YAAYvB,EAAKoB,KAAKI,KAC3BC,QAAQC,IAAI,QAAS1B,EAAK2B,WACtB3B,EAAK2B,YACP3B,EAAK4B,WAAW5B,EAAKoB,MACrBpB,EAAK2B,WAAY,KAKnB3B,EAAKqB,UAAW,EAChBrB,EAAKsB,eAAgB,0DAwBVO,EAAcC,EAAeC,GAAkB,IAAAC,EAAA/B,KAC9DA,KAAKgC,YAAYJ,KAAOA,EACxB5B,KAAKgC,YAAYH,MAAQA,EACzB7B,KAAKgC,YAAYF,SAAWA,EAG5BlC,GAAKqC,+BAA+BJ,EAAOC,GAAUI,KACnD,WACEH,EAAKL,WAAY,IAEnBS,MAAM,SAAAC,GACN,IAAIC,EAAYD,EAAME,KAClBC,EAAeH,EAAMI,QAEzBT,EAAKU,SAAU,EACE,sBAAbJ,EACFK,MAAM,6BAENA,MAAMH,KAGVvC,KAAKyC,SAAU,qCAINtB,GACTnB,KAAK2C,QAAQf,KAAO5B,KAAKgC,YAAYJ,KACrC5B,KAAK2C,QAAQd,MAAQV,EAAKU,MAC1B7B,KAAK2C,QAAQC,GAAKzB,EAAKI,IAEvB,IAAIsB,EAAO7C,KACXL,GAAGmD,WAAW,SAASC,IAAI/C,KAAK2C,SAC7BT,KAAK,SAAUc,GACdH,EAAKnB,WAAY,EACjBmB,EAAKb,YAAc,CACjBJ,KAAM,GACNC,MAAO,GACPC,SAAU,IAEZe,EAAKF,QAAU,CACbf,KAAM,GACNC,MAAO,GACPe,GAAI,MAGPT,MAAM,SAAUC,GACfZ,QAAQY,MAAM,0BAA2BA,KAE7CZ,QAAQC,IAAI,8CAIMwB,GAClBzB,QAAQC,IAAI,wBACZ,IAAIoB,EAAO7C,KACXL,GAAGmD,WAAW,SAASI,MAAM,KAAM,KAAMD,GACtCE,MAAMjB,KAAM,SAASkB,GACpBA,EAAcC,QAAQ,SAACC,GACrB9B,QAAQC,IAAI,2BAEZoB,EAAKU,gBAAkB,CACrB3B,KAAM0B,EAAIE,OAAO5B,KACjBC,MAAOyB,EAAIE,OAAO3B,MAClBe,GAAIU,EAAIE,OAAOZ,IAGjBpB,QAAQC,IAAI,kBAAmB6B,EAAIE,QAEnChC,QAAQC,IAAIoB,EAAKU,gBAAgB3B,mDAKhB6B,GACvBzD,KAAKqB,cAAgBoC,gCAET5B,EAAeC,GAE3BlC,GAAK8D,2BAA2B7B,EAAOC,GACpCK,MAAM,SAAUC,GACCA,EAAME,KAAtB,IACIC,EAAeH,EAAMI,SAChB,EACTE,MAAMH,KAEVoB,OAAOC,QAAQC,GAAG,qCAKlBrC,QAAQC,IAAIvC,IAASU,OAAOkE,YAAa,uBAEzClE,GAAKmE,UACL/D,KAAKmB,KAAO,KACZK,QAAQC,IAAIvC,IAASU,OAAOkE,YAAa,sBACzC9D,KAAKoB,UAAW,EAChBpB,KAAKuD,gBAAkB,CACrB3B,KAAM,GACNC,MAAO,GACPe,GAAI,+CAMN5C,KAAKoB,UAAW,0CAGMqC,GACtBzD,KAAKgE,aAAeP,6CAGKQ,iDAcEpC,GAAY,IAAAqC,EAAAlE,KAEnCmE,EAAejF,IAASiF,UAAUC,MAElCC,EAAiBrE,KAAKsE,aAE1B,GAAiB,MAAbD,EAAmB,CACrB,IACIE,EADMF,EAAUG,MAAM,KACG,GAAK,OAClChD,QAAQC,IAAI,cAAe8C,GAC3B/C,QAAQC,IAAI,WAAY0C,EAAQM,MAAM,mCAEtCN,EAAQM,MAAM,kBAAoBF,GAAoBG,iBAAiBxC,KAAK,SAACyC,GAI3E,IAAIC,EAAM,IAAIC,eAWd,OAVAD,EAAIE,aAAe,OACnBF,EAAIG,OAAS,SAAUC,GACVJ,EAAIK,UAEjBL,EAAIM,KAAK,MAAOP,GAChBC,EAAIO,OAEJjB,EAAKkB,gBAAkBT,EAEvBnD,QAAQC,IAAI,SAAUkD,GACfA,IACNxC,MAAM,SAAUC,kDAhNtBiD,8EAAuB,2CACvBA,8EAAwB,6CACxBA,8EAA8B,4CAC9BA,8EAAgC,2CAChCA,8EAA+B,gDAC/BA,8EAAoC,+CACpCA,6EAA+B,gDAE/BA,6EAA+B,mDAC/BA,6EAAkC,mDAClCA,6EAAkC,+CA0BlCA,6EAAyB,CACxBzD,KAAM,GACNC,MAAO,GACPC,SAAU,4CAEXuD,6EAAqB,CACpBzD,KAAM,GACNC,MAAO,GACPe,GAAI,oDAELyC,6EAA6B,CAC5BzD,KAAM,GACNC,MAAO,GACPe,GAAI,2CAKL0C,iHAoDAA,yHAqBAA,mHAGAA,0GAaAA,qHAeAA,6HAIAA,+HAIAA,oIAcAA,2GCvJYC,GA9BAC,aAASC,aAAW,SAACC,GAEhC,OAAQC,EAAAC,EAAAC,cAAA,QAAMC,UAAU,UACpBC,SAAU,SAACf,GACPA,EAAMgB,iBACNnG,GAAUoG,MAAMpG,GAAUmC,YAAYH,MAAOhC,GAAUmC,YAAYF,YAKvE6D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,uCACAF,EAAAC,EAAAC,cAAA,SAAOK,KAAK,OAAOtD,GAAG,OAAOhB,KAAK,OAAOuE,UAAQ,EAC7CC,SAAU,SAACC,GACPxG,GAAUmC,YAAYH,MAAQwE,EAAEC,OAAO7C,UAGnDkC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,+BACAF,EAAAC,EAAAC,cAAA,SAAOK,KAAK,WAAWtD,GAAG,WAAWhB,KAAK,WAAWuE,UAAQ,EACzDC,SAAU,SAACC,GACPxG,GAAUmC,YAAYF,SAAWuE,EAAEC,OAAO7C,UAGtDkC,EAAAC,EAAAC,cAAA,UAAQC,UAAU,eAAlB,qBACAH,EAAAC,EAAAC,cAAA,yCAA0BF,EAAAC,EAAAC,cAAA,wCC3B5BU,kBAKF,SAAAA,EAAYC,GAAW,IAAAzG,EAAA,OAAAE,OAAAC,EAAA,EAAAD,CAAAD,KAAAuG,GACnBxG,EAAAE,OAAAwG,EAAA,EAAAxG,CAAAD,KAAAC,OAAAyG,EAAA,EAAAzG,CAAAsG,GAAAI,KAAA3G,KAAMwG,IADavG,OAAAE,EAAA,EAAAF,CAAAF,EAAA,OAAA6G,EAAA3G,OAAA4G,EAAA,EAAA5G,CAAAF,IAAAE,OAAAE,EAAA,EAAAF,CAAAF,EAAA,WAAA+G,EAAA7G,OAAA4G,EAAA,EAAA5G,CAAAF,4EAId,IAAAgC,EAAA/B,KACL,OACI2F,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACXH,EAAAC,EAAAC,cAACkB,GAAA,EAAD,CAAUC,OAAQ,SAAAC,GAEdzF,QAAQC,IAAIwF,EAAc,IAE1B,IAAIC,EAAS,IAAIC,WAEjBD,EAAOnC,OAAS,SAACsB,GACbtE,EAAKqF,KAAOf,EAAEC,OAAOe,OACrB7F,QAAQC,IAAIM,EAAKqF,OAGrBF,EAAOI,cAAcL,EAAc,MAElC,SAAAM,GAAA,IAAGC,EAAHD,EAAGC,aAAcC,EAAjBF,EAAiBE,cAAjB,OACG9B,EAAAC,EAAAC,cAAA,eACIF,EAAAC,EAAAC,cAAA,MAAS2B,IACL7B,EAAAC,EAAAC,cAAA,QAAW4B,KACX9B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAc4B,MAAO,CAChCC,QAAS5F,EAAKqF,KACR,OACA,SAENzB,EAAAC,EAAAC,cAAA,OAAK+B,IAAI,kCAAkCC,IAAI,KAC/ClC,EAAAC,EAAAC,cAAA,2CAOnB7F,KAAKoH,MAAQzB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACzBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAW8B,IAAK5H,KAAKoH,KAAMU,MAAM,MAAMJ,MAAO,CAAEK,aAAc,WAC7EpC,EAAAC,EAAAC,cAAA,KAAGmC,QAAS,WACRnI,GAAUoI,gBAAgBlG,EAAKqF,QADnC,uCA5CMc,+CAErB7C,8EAAuB,8CACvBA,6EAA8B,SAsDpBG,gBAASe,ICnBT4B,GAnCA3C,aAASC,aAAW,SAAC2C,GAChC,OAAQzC,EAAAC,EAAAC,cAAA,QAAMC,UAAU,UAAUC,SAAU,SAACM,GACzCA,EAAEL,mBAGFL,EAAAC,EAAAC,cAACwC,GAAD,MACA1C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,qCACAF,EAAAC,EAAAC,cAAA,SAAOK,KAAK,OAAOtD,GAAG,OAAOhB,KAAK,OAAOwE,SAAU,SAACC,GAChDxG,GAAUmC,YAAYJ,KAAOyE,EAAEC,OAAO7C,UAG9CkC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,uCACAF,EAAAC,EAAAC,cAAA,SAAOK,KAAK,OAAOtD,GAAG,OAAOhB,KAAK,OAAOuE,UAAQ,EAC7CC,SAAU,SAACC,GACPxG,GAAUmC,YAAYH,MAAQwE,EAAEC,OAAO7C,UAGnDkC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,+BACAF,EAAAC,EAAAC,cAAA,SAAOK,KAAK,WAAWtD,GAAG,WAAWhB,KAAK,WAAWuE,UAAQ,EACzDC,SAAU,SAACC,GACPxG,GAAUmC,YAAYF,SAAWuE,EAAEC,OAAO7C,UAGtDkC,EAAAC,EAAAC,cAAA,UAAQC,UAAU,cAAckC,QAAS,WACrCnI,GAAUyI,SAASzI,GAAUmC,YAAYJ,KAAM/B,GAAUmC,YAAYH,MAAOhC,GAAUmC,YAAYF,YADtG,eAIA6D,EAAAC,EAAAC,cAAA,sCAA0BF,EAAAC,EAAAC,cAAA,kCCyCnB0C,GAnEd/C,cAASgD,EAAA,SAAAC,GAMN,SAAAF,EAAY/B,GAAY,IAAAzG,EAAA,OAAAE,OAAAC,EAAA,EAAAD,CAAAD,KAAAuI,GACpBxI,EAAAE,OAAAwG,EAAA,EAAAxG,CAAAD,KAAAC,OAAAyG,EAAA,EAAAzG,CAAAsI,GAAA5B,KAAA3G,KAAMwG,IADcvG,OAAAE,EAAA,EAAAF,CAAAF,EAAA,aAAA2I,EAAAzI,OAAA4G,EAAA,EAAA5G,CAAAF,IAAAE,OAAAE,EAAA,EAAAF,CAAAF,EAAA,eAAA4I,EAAA1I,OAAA4G,EAAA,EAAA5G,CAAAF,IAEpB6I,YAAQ,WACH/I,GAAUuB,SACXoF,EAAM5C,QAAQiF,KAAM,SACtBrC,EAAM5C,QAAQiF,KAAK,OALD9I,EANlB,OAAAE,OAAA6I,EAAA,EAAA7I,CAAAsI,EAAAE,GAAAxI,OAAA8I,EAAA,EAAA9I,CAAAsI,EAAA,EAAAS,IAAA,mBAAAvF,MAAA,SAgBWwF,GACbjJ,KAAKkJ,WAAaD,IAjBhB,CAAAD,IAAA,SAAAvF,MAAA,WAoBG,IAAA1B,EAAA/B,KAEL,OAAQmJ,EAAA,qBAAKrD,UAAU,SACnBqD,EAAA,yBAASrD,UAAU,gBACfqD,EAAA,qBAAKrD,UAAU,QAAf,UACAqD,EAAA,qBAAKrD,UAAU,WACXqD,EAAA,qBAAKvB,IAAI,2BAA2BC,IAAI,GAAGC,MAAM,SAErDqB,EAAA,qCACAA,EAAA,kGAAqEA,EAAA,yBAArE,iEACAA,EAAA,mBAAGrD,UAAU,aAAb,mCAEJqD,EAAA,yBAASrD,UAAU,iBAEfqD,EAAA,qBAAKrD,UAAU,aACXqD,EAAA,qBAAKrD,UAAU,sBACXqD,EAAA,wBAAQrD,UAAU,YAAYlD,GAAG,gBAAgBoF,QAAS,WAAQjG,EAAKqH,kBAAiB,GAAO5H,QAAQC,IAAI,gBAAiBM,EAAKmH,aAC7HxB,MAAO,CACH2B,aAAcrJ,KAAKkJ,WAAa,oBAAsB,sBAF9D,qBAMAC,EAAA,wBAAQrD,UAAU,YAAYlD,GAAG,gBAAgBoF,QAAS,WAAQjG,EAAKqH,kBAAiB,GAAQ5H,QAAQC,IAAI,gBAAiBM,EAAKmH,aAC9HxB,MAAO,CACH2B,aAAcrJ,KAAKkJ,WAAa,oBAAsB,sBAF9D,gBAOJC,EAAA,qBAAKrD,UAAU,WAAW4B,MAAO,CAC7B4B,QAAStJ,KAAKkJ,WACR,sBACA,wBAEJlJ,KAAKkJ,WAEHC,EAAA,cAACI,GAAD,MAEAJ,EAAA,cAACK,GAAD,cA1DlBjB,EAAA,CAA2BkB,aAA3Bf,EAAAzI,OAAAyJ,EAAA,EAAAzJ,CAAAuI,EAAAmB,UAAA,cAELtE,KAFK,CAAAuE,cAAA,EAAAC,YAAA,EAAAC,UAAA,EAAAC,YAAA,kBAE4B,KAF5BpB,EAAA1I,OAAAyJ,EAAA,EAAAzJ,CAAAuI,EAAAmB,UAAA,gBAGLtE,KAHK,CAAAuE,cAAA,EAAAC,YAAA,EAAAC,UAAA,EAAAC,YAAA,kBAG8B,KAH9BC,EAAAxB,KAAAwB,ECkBKC,gBAFE,0QApBTjK,KAAKkK,YAAclK,KAAKkK,mDAGJC,GACpB,OAAQA,GACJ,IAAK,OACDnK,KAAKoK,cAAe,EACpBpK,KAAKqK,kBAAmB,EACxBrK,KAAKsK,YAAc,SACnB,MACJ,IAAK,WACDtK,KAAKoK,cAAe,EACpBpK,KAAKqK,kBAAmB,EACxBrK,KAAKsK,YAAc,8DAnB9BjF,8EAAwB,+CACxBA,8EAA0B,mDAC1BA,8EAA8B,8CAE9BA,6EAAyB,gDACzBC,qHAIAA,qFCoCUiF,GA1Cd/E,2BAEG,SAAA+E,EAAY/D,GAAa,OAAAvG,OAAAC,EAAA,EAAAD,CAAAD,KAAAuK,GAAAtK,OAAAwG,EAAA,EAAAxG,CAAAD,KAAAC,OAAAyG,EAAA,EAAAzG,CAAAsK,GAAA5D,KAAA3G,KACfwG,0EAIN,OAAQ2C,EAAA,yBAASrD,UAAYmE,GAASC,WAAc,iBAAmB,oBACnEf,EAAA,qBAAKrD,UAAU,QACXqD,EAAA,iCACAA,EAAA,qBAAKnB,QAAS,kBAAMiC,GAASO,YAAY5C,IAAI,0CAA0CC,IAAI,MAG/FsB,EAAA,qBAAKrD,UAAU,YAAYlD,GAAG,aAC1BuG,EAAA,sBAAMvG,GAAG,WAAYkD,UAAYmE,GAASG,aAAgB,WAAa,GACnEpC,QAAS,WACLiC,GAASQ,gBAAgB,UAG7BtB,EAAA,qBAAKvB,IAAI,0CAA0CC,IAAI,KACvDsB,EAAA,mCAEHc,GAASG,aACJjB,EAAA,cAACuB,GAAA,EAAD,CAAUC,GAAG,UACbV,GAASI,iBAAmBlB,EAAA,cAACuB,GAAA,EAAD,CAAUC,GAAG,cACzC,IAIVxB,EAAA,qBAAKrD,UAAU,YAAYlD,GAAG,iBAC1BuG,EAAA,sBAAMvG,GAAG,eAAekD,UAAYmE,GAASI,iBAAoB,WAAa,GAC1ErC,QAAS,WACLiC,GAASQ,gBAAgB,cAE7BtB,EAAA,qBAAKvB,IAAI,8CAA8CC,IAAI,KAC3DsB,EAAA,+CAnCajB,iBCG3B0C,8BAeJ,SAAAA,EAAYpE,GAAY,IAAAzG,EAAA,OAAAE,OAAAC,EAAA,EAAAD,CAAAD,KAAA4K,GACtB7K,EAAAE,OAAAwG,EAAA,EAAAxG,CAAAD,KAAAC,OAAAyG,EAAA,EAAAzG,CAAA2K,GAAAjE,KAAA3G,KAAMwG,IADgBvG,OAAAE,EAAA,EAAAF,CAAAF,EAAA,kBAAA8K,EAAA5K,OAAA4G,EAAA,EAAA5G,CAAAF,IAAAE,OAAAE,EAAA,EAAAF,CAAAF,EAAA,qBAAA+K,EAAA7K,OAAA4G,EAAA,EAAA5G,CAAAF,IAAAE,OAAAE,EAAA,EAAAF,CAAAF,EAAA,oBAAAgL,EAAA9K,OAAA4G,EAAA,EAAA5G,CAAAF,IAAAE,OAAAE,EAAA,EAAAF,CAAAF,EAAA,qBAAAiL,EAAA/K,OAAA4G,EAAA,EAAA5G,CAAAF,IAAAE,OAAAE,EAAA,EAAAF,CAAAF,EAAA,iBAAAkL,EAAAhL,OAAA4G,EAAA,EAAA5G,CAAAF,IAAAE,OAAAE,EAAA,EAAAF,CAAAF,EAAA,gBAAAmL,EAAAjL,OAAA4G,EAAA,EAAA5G,CAAAF,IAAAE,OAAAE,EAAA,EAAAF,CAAAF,EAAA,iBAAAoL,EAAAlL,OAAA4G,EAAA,EAAA5G,CAAAF,IAAAE,OAAAE,EAAA,EAAAF,CAAAF,EAAA,eAAAqL,EAAAnL,OAAA4G,EAAA,EAAA5G,CAAAF,4EAIf,IAAAgC,EAAA/B,KAEP,OAAQ2F,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBAClBjG,GAAUuB,SAAkC,GAAtBuE,EAAAC,EAAAC,cAAC6E,GAAA,EAAD,CAAUC,GAAG,MACtChF,EAAAC,EAAAC,cAAA,UAAQmC,QAAS,WACfjG,EAAKsJ,iBAAmBtJ,EAAKsJ,iBAC5BvF,UAAU,iBACqB,KAA9BjG,GAAUuF,gBACRO,EAAAC,EAAAC,cAAA,OAAK+B,IAAK,GAAK/H,GAAUuF,gBAAsByC,IAAI,GAAGC,MAAM,KAC5DJ,MAAO,CACLK,aAAc,WAEhBpC,EAAAC,EAAAC,cAAA,OAAK+B,IAAI,qCAAqCC,IAAI,GAAGC,MAAM,QAG/D9H,KAAKqL,gBAEL1F,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACbH,EAAAC,EAAAC,cAAA,UACEmC,QAAS,WACPjG,EAAKuJ,oBAAsBvJ,EAAKuJ,mBAChCvJ,EAAKwJ,mBAAoB,EACzBxJ,EAAKyJ,oBAAqB,GAE5BC,YAAa,WAEX1J,EAAKuJ,oBAAqB,GAE5BI,WAAY,WAEV3J,EAAKuJ,oBAAqB,EAC1B9J,QAAQC,IAAI,SAEdiG,MAAO,CACLiE,gBAAiB3L,KAAKsL,mBAClB,UACAtL,KAAK4L,eAAiB,UAAY,YAlB1C,cAoBAjG,EAAAC,EAAAC,cAAA,UAAQC,UAAU,aAChBkC,QAAS,WACPjG,EAAKuJ,oBAAqB,EAC1BvJ,EAAKwJ,mBAAqBxJ,EAAKwJ,kBAC/BxJ,EAAKyJ,oBAAqB,GAE5BC,YAAa,WAEX1J,EAAKwJ,mBAAoB,GAE3BG,WAAY,WAEV3J,EAAKwJ,mBAAoB,EACzB/J,QAAQC,IAAI,SAEdiG,MAAO,CACLiE,gBAAiB3L,KAAKuL,kBAClB,UACAvL,KAAK6L,cAAgB,UAAY,YAlBzC,oBAoBAlG,EAAAC,EAAAC,cAAA,UACE4F,YAAa,WAEX1J,EAAKyJ,oBAAqB,GAE5BE,WAAY,WAEV3J,EAAKyJ,oBAAqB,EAC1BhK,QAAQC,IAAI,SAEdiG,MAAO,CACLiE,gBAAiB3L,KAAKwL,mBAClB,UACAxL,KAAK8L,eAAiB,UAAY,WAExC9D,QAAS,WAEPnI,GAAUkE,UACVvC,QAAQC,IAAI,0BAEZM,EAAKuJ,oBAAqB,EAC1BvJ,EAAKwJ,mBAAoB,EACzBxJ,EAAKyJ,oBAAsBzJ,EAAKyJ,qBAtBpC,sBA8BF,WA5GgBtD,0DAEvB7C,8EAA6B,qDAE7BA,8EAAgC,oDAChCA,8EAA+B,qDAC/BA,8EAAgC,iDAEhCA,8EAA4B,gDAC5BA,8EAA2B,iDAC3BA,8EAA4B,+CAE5BA,8EAA+B,QAuGnBG,gBAASoF,ICjHRmB,GAAfvG,6BAIG,SAAAuG,EAAYvF,GAAY,IAAAzG,EAAA,OAAAE,OAAAC,EAAA,EAAAD,CAAAD,KAAA+L,GACpBhM,EAAAE,OAAAwG,EAAA,EAAAxG,CAAAD,KAAAC,OAAAyG,EAAA,EAAAzG,CAAA8L,GAAApF,KAAA3G,KAAMwG,IADcvG,OAAAE,EAAA,EAAAF,CAAAF,EAAA,aAAAiM,GAAA/L,OAAA4G,EAAA,EAAA5G,CAAAF,4EAKpB,OAAQ4F,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACnBH,EAAAC,EAAAC,cAAA,UAAK7F,KAAKwG,MAAMyF,OAChBtG,EAAAC,EAAAC,cAACqG,GAAD,cAXuBzC,IAAMvB,qDAEpC7C,8EAAiC,iBAcvBG,gBAASuG,ICdRI,GAAf3G,6BAIG,SAAA2G,EAAY3F,GAAY,IAAAzG,EAAA,OAAAE,OAAAC,EAAA,EAAAD,CAAAD,KAAAmM,GACpBpM,EAAAE,OAAAwG,EAAA,EAAAxG,CAAAD,KAAAC,OAAAyG,EAAA,EAAAzG,CAAAkM,GAAAxF,KAAA3G,KAAMwG,IADcvG,OAAAE,EAAA,EAAAF,CAAAF,EAAA,aAAAqM,GAAAnM,OAAA4G,EAAA,EAAA5G,CAAAF,IAEpB6I,YAAQ,WACH/I,GAAUuB,SACXoF,EAAM5C,QAAQiF,KAAK,SACjBrC,EAAM5C,QAAQiF,KAAK,OALL9I,wEAWpB,OAAQ4F,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACnBH,EAAAC,EAAAC,cAACwG,GAAD,MACA1G,EAAAC,EAAAC,cAACyG,GAAD,CAAYL,MAAOhC,GAASK,sBAjBXb,IAAMvB,qDAE9B7C,8EAAiC,iBAqBvBG,gBAAS2G,aCwJTI,UAFO,kBA5KlB,SAAAC,IAAevM,OAAAC,EAAA,EAAAD,CAAAD,KAAAwM,GAAAvM,OAAAE,EAAA,EAAAF,CAAAD,KAAA,WAAAyM,GAAAzM,MAAAC,OAAAE,EAAA,EAAAF,CAAAD,KAAA,WAAA0M,GAAA1M,MAAAC,OAAAE,EAAA,EAAAF,CAAAD,KAAA,OAAA2M,GAAA3M,MAAAC,OAAAE,EAAA,EAAAF,CAAAD,KAAA,gBAAA4M,GAAA5M,MAAAC,OAAAE,EAAA,EAAAF,CAAAD,KAAA,eAAA6M,GAAA7M,MAAAC,OAAAE,EAAA,EAAAF,CAAAD,KAAA,oBAAA8M,GAAA9M,MAAAC,OAAAE,EAAA,EAAAF,CAAAD,KAAA,cAAA+M,GAAA/M,MAAAC,OAAAE,EAAA,EAAAF,CAAAD,KAAA,YAAAgN,GAAAhN,MAAAC,OAAAE,EAAA,EAAAF,CAAAD,KAAA,qBAAAiN,GAAAjN,MAAAC,OAAAE,EAAA,EAAAF,CAAAD,KAAA,eAAAkN,GAAAlN,MAAAC,OAAAE,EAAA,EAAAF,CAAAD,KAAA,YAAAmN,GAAAnN,MAAAC,OAAAE,EAAA,EAAAF,CAAAD,KAAA,oBAAAoN,GAAApN,MAAAC,OAAAE,EAAA,EAAAF,CAAAD,KAAA,oBAAAqN,GAAArN,iEAIQsN,EAAkBC,EAAe1L,GAUpD7B,KAAKwN,sBAAqB,4CA0B1B,IAAIC,EAAa,IAAIC,KACjBC,EAAUF,EAAMG,UAChBC,EAAUJ,EAAMK,WAAa,EAC7BC,EAAYN,EAAMO,cAClBC,EAAOR,EAAMS,WAAa,IAAMT,EAAMU,aAW1C,OATIR,EAAK,KACLA,EAAK,IAAMA,GAGXE,EAAK,KACLA,EAAK,IAAMA,GAGfJ,EAAQI,EAAK,IAAMF,EAAK,IAAMI,EAAO,IAAME,+CAIlBxK,GACzBzD,KAAKoO,kBAAoB3K,uCAGRA,GACjBzD,KAAKqO,UAAY5K,0CAGGQ,GAAqB,IAAAlE,EAAAC,KAErCmE,EAAUjF,IAASiF,UAAUC,MAC7BC,EAAYxE,GAAUyE,aAC1B9C,QAAQC,IAAI5B,GAAUyE,cACtB,IAAInD,EAAOkD,EAAUG,MAAM,KAEhBL,EAAQM,MAAM,eAAiBtD,EAAK,GAAK,IAAMnB,KAAKsN,YAAc,IAAMtN,KAAKqO,WACnFC,UAAUrK,EAAa,YAAY/B,KAAK,SAACqM,GAC1C/M,QAAQC,IAAI,gCACZ1B,EAAKyO,kEAIe,IAAAzM,EAAA/B,KAEpBmE,EAAejF,IAASiF,UAAUC,MAElCC,EAAiBxE,GAAUyE,aAE/B9C,QAAQC,IAAI,cAAe4C,GAC3B,IAAIlD,EAAOkD,EAAUG,MAAM,KACvBiK,EAAYtN,EAAK,GAAK,IAAMnB,KAAKsN,YAAc,OACnD9L,QAAQC,IAAI,gBAAiBgN,GAE7BtK,EAAQM,MAAM,eAAiBtD,EAAK,GAAK,IAAMnB,KAAKsN,YAAc,IAAMtN,KAAKqO,WAAW3J,iBAAiBxC,KAAK,SAACyC,GAI3G,IAAIC,EAAM,IAAIC,eAYd,OAXAD,EAAIE,aAAe,OACnBF,EAAIG,OAAS,SAAUC,GACRJ,EAAIK,UAEnBL,EAAIM,KAAK,MAAOP,GAChBC,EAAIO,OAEJpD,EAAK2M,aAAe/J,EACpB5C,EAAKyL,sBAAqB,GAE1BhM,QAAQC,IAAI,SAAUkD,GACfA,IACRxC,MAAM,SAAUC,gDAUnBpC,KAAK2O,oBAAqB,oDAI1B3O,KAAK2O,oBAAqB,yCAkB1B,OAAQ3O,KAAK4O,cACT,KAAK,EACD5O,KAAK2O,oBAAqB,EAC1B3O,KAAK4O,aAAe,EACpB,MACJ,KAAK,EACD5O,KAAK6O,UAAY,wBACjB,MACJ,KAAK,EACD7O,KAAK6O,UAAY,wBACjB,MACJ,KAAK,EACD7O,KAAK6O,UAAY,qBACjB,MACJ,KAAK,EACD7O,KAAK2O,oBAAqB,EAC1B3O,KAAK4O,aAAe,6CAK5B5O,KAAK4O,cAAgB,EACrBpN,QAAQC,IAAIzB,KAAK4O,cACjB5O,KAAK8O,yDAIL9O,KAAK4O,cAAgB,EACrB5O,KAAK8O,gEAjLRzJ,8EAA2BxF,GAAUkP,2DACrC1J,6EAA6B,0CAC7BA,6EAAuB,mDACvBA,6EAAgC,kDAChCA,6EAA+B,uDAC/BA,8EAAwC,gDACxCA,6EAA8B,+CAC9BA,6EAA4B,iDAM5BC,mIAsDAA,iIAIAA,4HAIAA,iIAcAA,uIAmCAD,8EAAyC,iDAEzCC,uIAIAA,uIAMAD,8EAA0B,8CAC1BA,6EAAuB,4EACvBA,6EAA+B,CAC5B,CAAE5B,MAAO,IAAKuL,MAAO,eACrB,CAAEvL,MAAO,IAAKuL,MAAO,QACrB,CAAEvL,MAAO,IAAKuL,MAAO,qEAExB3J,6EAA+B,CAC5B,CAAE5B,MAAO,UAAWuL,MAAO,WAC3B,CAAEvL,MAAO,QAASuL,MAAO,SACzB,CAAEvL,MAAO,YAAauL,MAAO,0DAEhC1J,4HAqBAA,+HAMAA,iGCzKLrG,EAAQ,6BAEFgQ,mBAKF,SAAAA,EAAYzI,GAAW,IAAAzG,EAAA,OAAAE,OAAAC,EAAA,EAAAD,CAAAD,KAAAiP,GACnBlP,EAAAE,OAAAwG,EAAA,EAAAxG,CAAAD,KAAAC,OAAAyG,EAAA,EAAAzG,CAAAgP,GAAAtI,KAAA3G,KAAMwG,IADavG,OAAAE,EAAA,EAAAF,CAAAF,EAAA,YAAAmP,GAAAjP,OAAA4G,EAAA,EAAA5G,CAAAF,IAAAE,OAAAE,EAAA,EAAAF,CAAAF,EAAA,gBAAAoP,GAAAlP,OAAA4G,EAAA,EAAA5G,CAAAF,4EAId,IAAAgC,EAAA/B,KACL,OACI2F,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACXH,EAAAC,EAAAC,cAACkB,GAAA,EAAD,CAAUC,OAAQ,SAAAC,GAEdzF,QAAQC,IAAIwF,EAAc,IAE1B,IAAIC,EAAS,IAAIC,WAEjBD,EAAOnC,OAAS,SAACsB,GACbtE,EAAK0M,UAAYpI,EAAEC,OAAOe,OAC1BkF,GAAc6C,aAAanI,EAAc,GAAGrF,MAC5CJ,QAAQC,IAAI,yBAA0BwF,EAAc,GAAGrF,OAG3DsF,EAAOI,cAAcL,EAAc,MAElC,SAAAM,GAAA,IAAGC,EAAHD,EAAGC,aAAcC,EAAjBF,EAAiBE,cAAjB,OACG9B,EAAAC,EAAAC,cAAA,WAASC,UAAU,qBAAqB4B,MAAO,CAC3CC,QAAS5F,EAAK0M,UACR,OACA,SAEN9I,EAAAC,EAAAC,cAAA,MAAS2B,IACL7B,EAAAC,EAAAC,cAAA,QAAW4B,KACX9B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBAOXH,EAAAC,EAAAC,cAAA,OAAK+B,IAAI,gCAAgCC,IAAI,KAC7ClC,EAAAC,EAAAC,cAAA,6BAQnB7F,KAAKyO,WAAa9I,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBAE9BH,EAAAC,EAAAC,cAAA,kDACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBAAmBkC,QAAS,WACvCuE,GAAc8C,gBAAgBtN,EAAK0M,aADvC,6BArDQvG,sDAEvB7C,8EAA4B,qDAC5BA,6EAAmC,UA+DzBG,gBAASyJ,IC3ElBK,GAAU,CACZ,CAAE7L,MAAO,QAASuL,MAAO,sBACzB,CAAEvL,MAAO,aAAcuL,MAAO,uBAC9B,CAAEvL,MAAO,UAAWuL,MAAO,yBAGzBO,eAEF,SAAAA,EAAY/I,GAAY,OAAAvG,OAAAC,EAAA,EAAAD,CAAAD,KAAAuP,GAAAtP,OAAAwG,EAAA,EAAAxG,CAAAD,KAAAC,OAAAyG,EAAA,EAAAzG,CAAAsP,GAAA5I,KAAA3G,KACdwG,0EAIN,OACIb,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACXH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,aACZH,EAAAC,EAAAC,cAAA,OAAKmC,QAAS,kBAAMuE,GAAciD,mBAAmB5H,IAAI,oCAAoCE,MAAM,OAAOD,IAAI,KAC9GlC,EAAAC,EAAAC,cAAA,UAAM0G,GAAcsC,WACpBlJ,EAAAC,EAAAC,cAAA,OAAKmC,QAAS,kBAAMuE,GAAckD,2BAA2B7H,IAAI,iCAAiCE,MAAM,OAAOD,IAAI,MAGpF,GAA9B0E,GAAcqC,aAAqBjJ,EAAAC,EAAAC,cAAA,WAASC,UAAU,WACnDH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,WACZH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,sBACZH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,kBAAjB,uBACAH,EAAAC,EAAAC,cAAA,SAAO6J,YAAY,iCAAiCxJ,KAAK,UAE7DP,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,sBACZH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,kBAAjB,+BACAH,EAAAC,EAAAC,cAAA,YAAU6J,YAAY,iDAAiD9N,KAAK,GAAGgB,GAAG,MAEtF+C,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,sBACZH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,kBAAjB,WACAH,EAAAC,EAAAC,cAAC8J,GAAA,EAAD,CACIC,SAAO,EACPhO,KAAK,SACL8N,YAAY,6CACZJ,QAASA,GACTxJ,UAAU,qBACV+J,gBAAgB,cAIY,GAA9BtD,GAAcqC,aAAqBjJ,EAAAC,EAAAC,cAAA,WAASjD,GAAG,aACzD+C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACXH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,WACZH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,sBACZH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,kBAAjB,2BACAH,EAAAC,EAAAC,cAAA,SAAO6J,YAAY,yCAAsCxJ,KAAK,UAElEP,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UAKvBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACXH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,sBACZH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,kBAAjB,uBACAH,EAAAC,EAAAC,cAAA,SAAO6J,YAAY,sCAAgCxJ,KAAK,UAE5DP,EAAAC,EAAAC,cAAA,KAAGC,UAAU,cAAb,sDACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBAIqB,GAA9ByG,GAAcqC,aAAqBjJ,EAAAC,EAAAC,cAAA,WAASjD,GAAG,mBACzD+C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,sBACZH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,kBAAjB,2BACAH,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,eACZH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,mBACbH,EAAAC,EAAAC,cAAA,SAAOK,KAAK,aADhB,iBAGAP,EAAAC,EAAAC,cAAA,QAAMC,UAAU,eAEhBH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,mBACbH,EAAAC,EAAAC,cAAA,SAAOK,KAAK,aADhB,WAGAP,EAAAC,EAAAC,cAAA,QAAMC,UAAU,iBAIxBH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,0BACZH,EAAAC,EAAAC,cAAA,wCAEAF,EAAAC,EAAAC,cAAA,SAAO6J,YAAY,QAAQxJ,KAAK,YAIpCP,EAAAC,EAAAC,cAAA,QAAMC,UAAU,0BACZH,EAAAC,EAAAC,cAAA,yCAEAF,EAAAC,EAAAC,cAAA,SAAO6J,YAAY,IAAIxJ,KAAK,YAIhCP,EAAAC,EAAAC,cAAA,QAAMC,UAAU,sBACZH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,kBAAjB,kCACAH,EAAAC,EAAAC,cAAC8J,GAAA,EAAD,CACID,YAAY,sBACZJ,QAAS/C,GAAcuD,qBAE/BnK,EAAAC,EAAAC,cAAA,QAAMC,UAAU,sBACZH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,kBAAjB,uDACAH,EAAAC,EAAAC,cAAC8J,GAAA,EAAD,CACID,YAAY,0BACZJ,QAAS/C,GAAcwD,sBAInCpK,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,kBAAjB,uBACAH,EAAAC,EAAAC,cAACmK,GAAD,QAEK,GAGjBrK,EAAAC,EAAAC,cAAA,UAAQjD,GAAG,UAAUkD,UAAU,UAC3BkC,QAAS,kBAAMuE,GAAc0D,oBADjC,qBAlHY/H,aA2Hb1C,gBAAS+J,IC3HRW,UAAf1K,6BAIG,SAAA0K,EAAY1J,GAAY,IAAAzG,EAAA,OAAAE,OAAAC,EAAA,EAAAD,CAAAD,KAAAkQ,GACpBnQ,EAAAE,OAAAwG,EAAA,EAAAxG,CAAAD,KAAAC,OAAAyG,EAAA,EAAAzG,CAAAiQ,GAAAvJ,KAAA3G,KAAMwG,IADcvG,OAAAE,EAAA,EAAAF,CAAAF,EAAA,mBAAAoQ,GAAAlQ,OAAA4G,EAAA,EAAA5G,CAAAF,4EAKf,IAAAgC,EAAA/B,KACL,OAAQ2F,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACnBH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,aAAalE,KAAK,GAAG8N,YAAY,mBAC9CU,QAAS,WACLrO,EAAKsO,kBAAmB,GAE5BC,OAAQ,WACJvO,EAAKsO,kBAAmB,GAE5B3I,MAAO,CACHiE,gBAAiB3L,KAAKqQ,iBAChB,UACA,UACNE,YAAavQ,KAAKqQ,iBACZ,UACA,gBACNG,YAAaxQ,KAAKqQ,iBACZ,QACA,GACNI,YAAazQ,KAAKqQ,iBACZ,QACA,MAEd1K,EAAAC,EAAAC,cAAA,UAAQC,UAAU,cAAlB,kBAhCsBoC,6DAE7B7C,8EAAuC,kBAmC7BG,gBAAS0K,IC5ClBQ,eAEF,SAAAA,EAAYlK,GAAY,OAAAvG,OAAAC,EAAA,EAAAD,CAAAD,KAAA0Q,GAAAzQ,OAAAwG,EAAA,EAAAxG,CAAAD,KAAAC,OAAAyG,EAAA,EAAAzG,CAAAyQ,GAAA/J,KAAA3G,KACdwG,0EAIN,OAAOb,EAAAC,EAAAC,cAAA,WAASC,UAAU,kBACtBH,EAAAC,EAAAC,cAAC8K,GAAD,MACAhL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACXH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,gBAAeH,EAAAC,EAAAC,cAAA,OAAK+B,IAAI,gCAAgCC,IAAI,KAA9E,kBACAlC,EAAAC,EAAAC,cAAA,UAAQC,UAAU,eACdkC,QAAS,WACLuE,GAAcqE,oBAGlBjL,EAAAC,EAAAC,cAAA,OAAK+B,IAAI,gCAAgCC,IAAI,KALjD,4BAXKK,aAsBN1C,gBAASkL,ICVTG,GATKrL,aAAS,SAAA+B,GAAsC,IAAnC3F,EAAmC2F,EAAnC3F,KAAMkP,EAA6BvJ,EAA7BuJ,KAElC,OAAQnL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACnBH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,gBAAgBlE,GAC9B+D,EAAAC,EAAAC,cAAA,OAAK+B,IAAI,gCAAgCC,IAAI,KAC7ClC,EAAAC,EAAAC,cAAA,KAAGC,UAAU,gBAAgBgL,MCMrBC,GAAfvL,6BAKG,SAAAuL,EAAYvK,GAAY,IAAAzG,EAAA,OAAAE,OAAAC,EAAA,EAAAD,CAAAD,KAAA+Q,GACpBhR,EAAAE,OAAAwG,EAAA,EAAAxG,CAAAD,KAAAC,OAAAyG,EAAA,EAAAzG,CAAA8Q,GAAApK,KAAA3G,KAAMwG,IADcvG,OAAAE,EAAA,EAAAF,CAAAF,EAAA,aAAAiR,GAAA/Q,OAAA4G,EAAA,EAAA5G,CAAAF,IAAAE,OAAAE,EAAA,EAAAF,CAAAF,EAAA,iBAAAkR,GAAAhR,OAAA4G,EAAA,EAAA5G,CAAAF,MASxBmR,eAAiB,WACb,OAAO3E,GAAc4E,SAASC,IAAI,SAAAC,GAAO,OAAK1L,EAAAC,EAAAC,cAACyL,GAAD,CAAa1P,KAAMyP,EAAQ/D,YAAawD,KAAMO,EAAQE,kBARpG3I,YAAQ,WACH/I,GAAUuB,SACPoF,EAAM5C,QAAQiF,KAAK,aACjBrC,EAAM5C,QAAQiF,KAAK,OALT9I,wEAcpB,OAAQ4F,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACnBH,EAAAC,EAAAC,cAACwG,GAAD,MACA1G,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACXH,EAAAC,EAAAC,cAACyG,GAAD,CAAYL,MAAOhC,GAASK,cAC5B3E,EAAAC,EAAAC,cAAC2L,GAAD,MACA7L,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAAe4B,MAAO,CACjC+J,WAAalF,GAAc4E,SAASO,OAAS,EACvC,aACA,SACNC,aAAepF,GAAc4E,SAASO,OAAS,EACzC,aACA,SACNE,eAAiBrF,GAAc4E,SAASO,OAAS,EAC3C,aACA,WAEJnF,GAAcoC,mBACVhJ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACbH,EAAAC,EAAAC,cAACgM,GAAD,OAEF,GACJtF,GAAc4E,SAASO,OAAS,EAC5B/L,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACZ9F,KAAKkR,kBAERvL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACbH,EAAAC,EAAAC,cAAA,OAAK+B,IAAI,kCAAkCC,IAAI,GAAGC,MAAM,QACxDnC,EAAAC,EAAAC,cAAA,oDACAF,EAAAC,EAAAC,cAAA,8EAA+DF,EAAAC,EAAAC,cAAA,WAA/D,+BACAF,EAAAC,EAAAC,cAAA,UAAQmC,QAAS,WACbuE,GAAcqE,oBADlB,qCAhDKnH,IAAMvB,qDAElC7C,8EAAiC,mDACjCA,6EAAiC,kBAwDvBG,gBAASuL,ICjElBe,eACJ,SAAAA,EAAYtL,GAAY,OAAAvG,OAAAC,EAAA,EAAAD,CAAAD,KAAA8R,GAAA7R,OAAAwG,EAAA,EAAAxG,CAAAD,KAAAC,OAAAyG,EAAA,EAAAzG,CAAA6R,GAAAnL,KAAA3G,KAChBwG,0EAKN,OAAQb,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACrBH,EAAAC,EAAAC,cAACkM,GAAA,EAAD,KACEpM,EAAAC,EAAAC,cAAC6E,GAAA,EAAD,CAAOsH,OAAK,EAACC,KAAK,IAAIC,UAAW3J,KACjC5C,EAAAC,EAAAC,cAAC6E,GAAA,EAAD,CAAOsH,OAAK,EAACC,KAAK,QAAQC,UAAW/F,KACrCxG,EAAAC,EAAAC,cAAC6E,GAAA,EAAD,CAAOsH,OAAK,EAACC,KAAK,YAAYC,UAAWnB,cAX/B7I,aAkBH1C,gBAASsM,ICnBJK,QACW,cAA7BxO,OAAOyO,SAASC,UAEe,UAA7B1O,OAAOyO,SAASC,UAEhB1O,OAAOyO,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO7M,EAAAC,EAAAC,cAAC4M,GAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM5Q,KAAK,SAAA6Q,GACjCA,EAAaC","file":"static/js/main.72a390f2.chunk.js","sourcesContent":["import * as firebase from 'firebase'\r\n\r\n// Required for side-effects\r\nrequire(\"firebase/firestore\");\r\nrequire(\"firebase/storage\");\r\nrequire(\"firebase/auth\");\r\n\r\nconst config = {\r\n  apiKey: \"AIzaSyDS4HMTx8MAmmFbsbnvU3muvyjcrFFebAk\",\r\n  authDomain: \"bioviz-webapp.firebaseapp.com\",\r\n  databaseURL: \"https://bioviz-webapp.firebaseio.com\",\r\n  projectId: \"bioviz-webapp\",\r\n  storageBucket: \"bioviz-webapp.appspot.com\",\r\n  messagingSenderId: \"377420984887\",\r\n  appId: \"1:377420984887:web:37b52a53fccb69ae5785b2\",\r\n  measurementId: \"G-T9XZ7VYC5S\"\r\n  };\r\n\r\nfirebase.initializeApp(config);\r\n\r\nexport const db = firebase.firestore();\r\nexport const storage = firebase.storage();\r\nexport const auth =  firebase.auth();\r\n\r\n//export default db;","import { observable, autorun, toJS, configure, action, computed, extendObservable } from 'mobx';\r\nimport firebase from 'firebase';\r\nimport { History } from 'history';\r\nimport { db, storage, auth } from '../firebaseConfig';\r\nimport { userInfo } from 'os';\r\nimport React, { Component } from 'react';\r\n\r\n\r\nclass AuthStore {\r\n\r\n\r\n  @observable user: any = null;\r\n  @observable error: any = null;\r\n  @observable isError: boolean = false;\r\n  @observable isNewUSer: boolean = false;\r\n  @observable isLogged: boolean = false;\r\n  @observable statusChecked: boolean = false;\r\n  @observable profilePhoto: any = \"\";\r\n\r\n  @observable currentEmail: any = \"\";\r\n  @observable currentUsername: any = \"\";\r\n  @observable profilePhotoURL: any = \"\";\r\n\r\n  constructor() {\r\n    // this.checkUserStatus();\r\n    auth.onAuthStateChanged((retrievedUser) => {\r\n      if (retrievedUser) {\r\n        // User is signed in.\r\n        this.user = retrievedUser;\r\n        this.isLogged = true;\r\n        this.statusChecked = true;\r\n        this.getUserData(this.user.uid);\r\n        console.log(\"hello\", this.isNewUSer)\r\n        if (this.isNewUSer) {\r\n          this.addNewUser(this.user)\r\n          this.isNewUSer = false;\r\n        }\r\n\r\n      } else {\r\n       \r\n        this.isLogged = false;\r\n        this.statusChecked = true;\r\n      }\r\n    })\r\n  }\r\n\r\n\r\n  @observable credentials = {\r\n    name: \"\",\r\n    email: \"\",\r\n    password: \"\"\r\n  }\r\n  @observable newUser = {\r\n    name: \"\",\r\n    email: \"\",\r\n    id: \"\"\r\n  }\r\n  @observable currentUserInfo = {\r\n    name: \"\",\r\n    email: \"\",\r\n    id: \"\"\r\n  }\r\n\r\n\r\n\r\n  @action register(name: string, email: string, password: string) {\r\n    this.credentials.name = name;\r\n    this.credentials.email = email;\r\n    this.credentials.password = password;\r\n\r\n    let that = this;\r\n    auth.createUserWithEmailAndPassword(email, password).then(\r\n      () => {\r\n        this.isNewUSer = true;\r\n      }\r\n    ).catch(error => {\r\n      let errorCode = error.code;\r\n      let errorMessage = error.message;\r\n\r\n      this.isError = true;\r\n      if (errorCode == 'auth/weak-password') {\r\n        alert('The password is too weak.');\r\n      } else {\r\n        alert(errorMessage);\r\n      }\r\n    })\r\n    this.isError = false;\r\n\r\n  }\r\n\r\n  addNewUser(user) {\r\n    this.newUser.name = this.credentials.name;\r\n    this.newUser.email = user.email;\r\n    this.newUser.id = user.uid;\r\n\r\n    let that = this;\r\n    db.collection(\"users\").add(this.newUser)\r\n      .then(function (docRef) {\r\n        that.isNewUSer = false;\r\n        that.credentials = {\r\n          name: \"\",\r\n          email: \"\",\r\n          password: \"\"\r\n        }\r\n        that.newUser = {\r\n          name: \"\",\r\n          email: \"\",\r\n          id: \"\"\r\n        }\r\n      })\r\n      .catch(function (error) {\r\n        console.error(\"Error adding document: \", error);\r\n      });\r\n    console.log('Subido')\r\n\r\n  }\r\n\r\n  @action getUserData(userIDRetrieved: string) {\r\n    console.log('obteniendo info.....')\r\n    let that = this;\r\n    db.collection(\"users\").where(\"id\", \"==\", userIDRetrieved)\r\n      .get().then( function(querySnapshot) {\r\n        querySnapshot.forEach((doc) => {\r\n          console.log('encontró el doc.....')\r\n\r\n          that.currentUserInfo = {\r\n            name: doc.data().name,\r\n            email: doc.data().email,\r\n            id: doc.data().id\r\n\r\n          }\r\n          console.log('el doc es .....', doc.data())\r\n\r\n          console.log(that.currentUserInfo.name)\r\n        });\r\n      });\r\n  }\r\n\r\n  @action setStatusChecked(value: boolean) {\r\n    this.statusChecked = value;\r\n  }\r\n  @action login(email: string, password: string) {\r\n    let logged = false;\r\n    auth.signInWithEmailAndPassword(email, password)\r\n      .catch(function (error) {\r\n        let errorCode = error.code;\r\n        let errorMessage = error.message;\r\n        logged = false;\r\n        alert(errorMessage);\r\n      });\r\n    window.history.go(1);\r\n\r\n  }\r\n\r\n  @action signOut() {\r\n    console.log(firebase.auth().currentUser, 'va cerrar sesión');\r\n\r\n    auth.signOut();\r\n    this.user = null;\r\n    console.log(firebase.auth().currentUser, 'cerró sesión');\r\n    this.isLogged = false;\r\n    this.currentUserInfo = {\r\n      name: '',\r\n      email: '',\r\n      id: ''\r\n\r\n    }\r\n  }\r\n\r\n  @action updateUserStatus() {\r\n    this.isLogged = true;\r\n  }\r\n\r\n  @action setProfilePhoto(value: any) {\r\n    this.profilePhoto = value;\r\n  }\r\n\r\n  @action uploadProfilePhoto(fileContent: string) {\r\n    /*  let storage = firebase.storage().ref();\r\n      let userEmail = this.credentials.email;\r\n      if (userEmail != null) {\r\n        let img = userEmail.split(\"@\");\r\n        let userProfilePicture = img[0] + \".jpg\";\r\n        let file = storage.child('profile_photos/' + userProfilePicture);\r\n        file.putString(fileContent, 'data_url').then(function (snapshot) {\r\n          console.log('Uploaded a base64url string!');\r\n        });\r\n      }\r\n  */\r\n  }\r\n\r\n  @action retrieveProfilePhoto(email: any) {\r\n\r\n    var storage: any = firebase.storage().ref();\r\n\r\n    let userEmail: any = this.currentEmail;\r\n    //let img: any = userEmail.split(\"@\");\r\n    if (userEmail != null) {\r\n      let img = userEmail.split(\"@\");\r\n      let userProfilePicture = img[0] + \".jpg\";\r\n      console.log('foto perfil', userProfilePicture);\r\n      console.log('foto url', storage.child('profile_photos/' + 'sebrestrepo.jpg'));\r\n\r\n      storage.child('profile_photos/' + userProfilePicture).getDownloadURL().then((url: any) => {\r\n        // `url` is the download URL for 'images/stars.jpg'\r\n\r\n        // This can be downloaded directly:\r\n        var xhr = new XMLHttpRequest();\r\n        xhr.responseType = 'blob';\r\n        xhr.onload = function (event: any) {\r\n          var blob = xhr.response;\r\n        };\r\n        xhr.open('GET', url);\r\n        xhr.send();\r\n\r\n        this.profilePhotoURL = url;\r\n        // Or inserted into an <img> element:\r\n        console.log('foto: ', url);\r\n        return url;\r\n      }).catch(function (error) {\r\n        // Handle any errors\r\n      });\r\n    }\r\n\r\n\r\n  }\r\n\r\n}\r\n\r\nconst authStore = new AuthStore();\r\n\r\nexport default authStore;","import React, { Component } from 'react';\r\nimport { withRouter } from 'react-router';\r\nimport authStore from '../../stores/authStore';\r\nimport { observer } from 'mobx-react';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\ninterface formLoginProps {\r\n\r\n}\r\n\r\nconst SignIn = observer(withRouter((formLoginProps) => {\r\n\r\n    return (<form className=\"sign-in\"\r\n        onSubmit={(event: any) => {\r\n            event.preventDefault();\r\n            authStore.login(authStore.credentials.email, authStore.credentials.password);\r\n          \r\n\r\n        }}>\r\n\r\n        <div className=\"form-imput\">\r\n            <label>Correo Electrónico*</label>\r\n            <input type=\"text\" id=\"mail\" name=\"mail\" required\r\n                onChange={(e: any) => {\r\n                    authStore.credentials.email = e.target.value;\r\n                }} />\r\n        </div>\r\n        <div className=\"form-imput\">\r\n            <label>Contraseña*</label>\r\n            <input type=\"password\" id=\"password\" name=\"password\" required\r\n                onChange={(e: any) => {\r\n                    authStore.credentials.password = e.target.value;\r\n                }} />\r\n        </div>\r\n        <button className=\"sign-in-btn\">Iniciar Sesión</button>\r\n        <p>¿Aún no tienes cuenta? <a>Regístrate</a></p>\r\n    </form>\r\n    );\r\n}));\r\n\r\nexport default SignIn;","import React, { Component } from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { observable } from 'mobx';\r\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\r\nimport Dropzone from 'react-dropzone';\r\nimport authStore from '../../stores/authStore';\r\nimport { auth } from 'firebase';\r\n\r\nclass ImgDropzone extends Component {\r\n\r\n    @observable file: any = null;\r\n    @observable fileName: string = '';\r\n\r\n    constructor(props: {}) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"img-dropzone\">\r\n                <Dropzone onDrop={acceptedFiles => {\r\n                    //this.file = acceptedFiles[0];\r\n                    console.log(acceptedFiles[0]);\r\n\r\n                    var reader = new FileReader();\r\n\r\n                    reader.onload = (e: any) => {\r\n                        this.file = e.target.result;\r\n                        console.log(this.file);\r\n                    }\r\n\r\n                    reader.readAsDataURL(acceptedFiles[0]);\r\n                }}>\r\n                    {({ getRootProps, getInputProps }) => (\r\n                        <section>\r\n                            <div {...getRootProps()}>\r\n                                <input {...getInputProps()} />\r\n                                <div className=\"add-img-btn\" style={{\r\n                                    display: this.file\r\n                                        ? 'none'\r\n                                        : 'flex'\r\n                                }}>\r\n                                    <img src=\"./assets/add-profile-ph-btn.png\" alt=\"\" />\r\n                                    <p>Agrega una foto de perfil</p>\r\n                                </div>\r\n                            </div>\r\n                        </section>\r\n                    )}\r\n                </Dropzone>\r\n\r\n                {this.file && <div className=\"user-img-div\">\r\n                    <img className=\"user-img\" src={this.file} width=\"140\" style={{ borderRadius: '100px' }} />\r\n                    <p onClick={() => {\r\n                        authStore.setProfilePhoto(this.file);\r\n                        //this.history.push(\"/home\");\r\n                    }}>¡Foto de perfil, lista!</p>\r\n                    {/*<input type=\"text\" onInput={(e: any) => this.fileName = e.target.value} />*/}\r\n                    {/*<button className=\"subir-img-btn\" >Subir Foto</button>*/}\r\n                </div>}\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default observer(ImgDropzone);","import React, { Component } from 'react';\r\nimport { withRouter } from 'react-router';\r\nimport authStore from '../../stores/authStore';\r\nimport { observer } from 'mobx-react';\r\nimport ImgDropzone from '../Login/ImgDropzone'\r\nimport { Redirect } from 'react-router-dom';\r\n\r\ninterface formRegisterProps {\r\n\r\n}\r\n\r\nconst SignUp = observer(withRouter((formRegisterProps) => {\r\n    return (<form className=\"sign-up\" onSubmit={(e: any) => {\r\n        e.preventDefault();\r\n\r\n    }}>\r\n        <ImgDropzone />\r\n        <div className=\"form-imput\">\r\n            <label>Nombres y Apellidos*</label>\r\n            <input type=\"text\" id=\"name\" name=\"name\" onChange={(e: any) => {\r\n                authStore.credentials.name = e.target.value;\r\n            }} />\r\n        </div>\r\n        <div className=\"form-imput\">\r\n            <label>Correo Electrónico*</label>\r\n            <input type=\"text\" id=\"mail\" name=\"mail\" required\r\n                onChange={(e: any) => {\r\n                    authStore.credentials.email = e.target.value;\r\n                }} />\r\n        </div>\r\n        <div className=\"form-imput\">\r\n            <label>Contraseña*</label>\r\n            <input type=\"password\" id=\"password\" name=\"password\" required\r\n                onChange={(e: any) => {\r\n                    authStore.credentials.password = e.target.value;\r\n                }} />\r\n        </div>\r\n        <button className=\"sign-up-btn\" onClick={() => {\r\n            authStore.register(authStore.credentials.name, authStore.credentials.email, authStore.credentials.password);\r\n\r\n        }}>Registrarse</button>\r\n        <p>¿Ya tienes una cuenta? <a>Inicia Sesión</a></p>\r\n    </form>\r\n    );\r\n}));\r\n\r\nexport default SignUp;","import * as React from 'react';\r\nimport './_Login.scss'\r\nimport { withRouter } from 'react-router';\r\nimport authStore from '../../stores/authStore';\r\nimport SignIn from '../Login/SignIn';\r\nimport SignUp from '../Login/SignUp';\r\nimport { observer } from 'mobx-react';\r\nimport { observable, autorun } from 'mobx';\r\nimport ImgDropzone from '../Login/ImgDropzone'\r\nimport Dropzone from 'react-dropzone';\r\n\r\ninterface LoginProps {\r\n    history: any\r\n}\r\n\r\n@observer export class Login extends React.Component<LoginProps> {\r\n\r\n    @observable signInForm: boolean = true;\r\n    @observable isRegistered: boolean = false;\r\n\r\n\r\n    constructor(props: any) {\r\n        super(props);\r\n        autorun(() => {\r\n            (authStore.isLogged) ?\r\n            props.history.push (\"/home\")\r\n        : props.history.push(\"/\") \r\n        })\r\n        \r\n    }\r\n\r\n    handleLoginState(signin: boolean) {\r\n        this.signInForm = signin;\r\n    }\r\n\r\n    render() {\r\n        \r\n        return (<div className=\"Login\">\r\n            <section className=\"info-section\">\r\n                <div className=\"logo\">BioViz</div>\r\n                <div className=\"img-div\">\r\n                    <img src=\"./assets/login-photo.png\" alt=\"\" width=\"410\" />\r\n                </div>\r\n                <h1>¡Hola!</h1>\r\n                <p>Bienvenido/a a la plataforma de análisis y etiquetado bioacústico <br></br>  más usada por todos los biólogos en el mundo entero. </p>\r\n                <p className=\"statement\">Organiza, etiqueta y comparte.</p>\r\n            </section>\r\n            <section className=\"login-section\">\r\n\r\n                <div className=\"login-box\">\r\n                    <div className=\"login-options-btns\">\r\n                        <button className=\"login-btn\" id=\"sign-in-state\" onClick={() => { this.handleLoginState(true); console.log('sign in state', this.signInForm); }}\r\n                            style={{\r\n                                borderBottom: this.signInForm ? '3px solid #35E285' : '0px solid #35E285'\r\n                            }}>\r\n                            Iniciar Sesión\r\n                                </button>\r\n                        <button className=\"login-btn\" id=\"sign-up-state\" onClick={() => { this.handleLoginState(false); console.log('sign up state', this.signInForm); }}\r\n                            style={{\r\n                                borderBottom: this.signInForm ? '0px solid #35E285' : '3px solid #35E285'\r\n                            }}>\r\n                            Registrarse\r\n                                </button>\r\n                    </div>\r\n                    <div className=\"form-box\" style={{\r\n                        padding: this.signInForm\r\n                            ? '45px 30px 45px 30px'\r\n                            : '20px 30px 25px 30px'\r\n                    }}>\r\n                        {(this.signInForm)\r\n                            ?\r\n                            <SignIn />\r\n                            :\r\n                            <SignUp />\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        </div>);\r\n    }\r\n}\r\n\r\nexport default Login;","import { observable, action } from \"mobx\";\r\n\r\n\r\nclass GenStore {\r\n\r\n    @observable isDashOpen = false;\r\n    @observable isHomeActive = true;\r\n    @observable isProjectsActive = false;\r\n\r\n    @observable navBarTitle = 'Inicio'\r\n    @action openDash() {\r\n        this.isDashOpen = !this.isDashOpen;\r\n    }\r\n\r\n    @action onDahshNavClick(section) {\r\n        switch (section) {\r\n            case 'home':\r\n                this.isHomeActive = true;\r\n                this.isProjectsActive = false\r\n                this.navBarTitle = 'Inicio'\r\n                break;\r\n            case 'projects':\r\n                this.isHomeActive = false;\r\n                this.isProjectsActive = true\r\n                this.navBarTitle = 'Proyectos'\r\n                break;\r\n        }\r\n    }\r\n\r\n\r\n}\r\nconst genStore = new GenStore();\r\n\r\nexport default genStore;","import * as React from 'react';\r\nimport './_DashMenu.scss';\r\nimport { Link, withRouter, Redirect, Route, Router } from 'react-router-dom';\r\nimport { observer } from 'mobx-react';\r\nimport { Component } from 'react';\r\nimport genStore from '../../stores/genStore';\r\n\r\n\r\n@observer class DashMenu extends Component {\r\n\r\n    constructor(props: any) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (<section className={(genStore.isDashOpen) ? \"dash-menu open\" : \"dash-menu closed\"}>\r\n            <div className=\"logo\">\r\n                <p>Bioviz</p>\r\n                <img onClick={() => genStore.openDash()} src=\"./assets/dashmenu-icons/expand-dash.svg\" alt=\"\" />\r\n            </div>\r\n\r\n            <div className=\"dash-icon\" id=\"home-icon\">\r\n                <span id=\"home-btn\"  className={(genStore.isHomeActive) ? 'selected' : ''}\r\n                    onClick={() => {\r\n                        genStore.onDahshNavClick('home')\r\n\r\n                    }}>\r\n                    <img src=\"./assets/dashmenu-icons/home-button.svg\" alt=\"\" />\r\n                    <h4>Inicio</h4>\r\n                </span>\r\n                {genStore.isHomeActive\r\n                    ? <Redirect to='/home' />\r\n                    : genStore.isProjectsActive ? <Redirect to='/projects' />\r\n                    : ''\r\n                }\r\n            </div>\r\n                \r\n            <div className=\"dash-icon\" id=\"analysis-icon\">\r\n                <span id=\"analysis-btn\" className={(genStore.isProjectsActive) ? 'selected' : ''}\r\n                    onClick={() => {\r\n                        genStore.onDahshNavClick('projects')\r\n                    }}>\r\n                    <img src=\"./assets/dashmenu-icons/projects-button.svg\" alt=\"\" />\r\n                    <h4>Proyectos</h4>\r\n                </span>\r\n            </div>\r\n        </section>);\r\n    }\r\n}\r\n\r\nexport default DashMenu;","import React, { Component } from 'react';\r\nimport './_ProfileMenu.scss'\r\nimport { observable } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\nimport { BrowserRouter as Router, Route, Link, Redirect } from \"react-router-dom\";\r\nimport authStore from '../../stores/authStore';\r\n\r\ninterface ProfileIconProps {\r\n  history: any\r\n}\r\n\r\nclass ProfileMenu extends Component {\r\n\r\n  @observable showProfileMenu = false;\r\n\r\n  @observable profileBtnSelected = false;\r\n  @observable configBtnSelected = false;\r\n  @observable signOutBtnSelected = false;\r\n\r\n  @observable profileBtnOver = false;\r\n  @observable configBtnOver = false;\r\n  @observable signOutBtnOver = false;\r\n\r\n  @observable profilePhoto: any = false;\r\n\r\n\r\n  constructor(props: any) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    \r\n    return (<div className=\"profile-icon\">\r\n      {(!authStore.isLogged) ? <Redirect to='/' /> : ''}\r\n      <button onClick={() => {\r\n        this.showProfileMenu = !this.showProfileMenu;\r\n      }} className=\"profile-photo\">\r\n        {(authStore.profilePhotoURL !== \"\")\r\n          ? <img src={\"\" + authStore.profilePhotoURL + \"\"} alt=\"\" width=\"37\"\r\n            style={{\r\n              borderRadius: '100px'\r\n            }} />\r\n          : <img src=\"./assets/generic-profile-photo.png\" alt=\"\" width=\"35\" />\r\n        }\r\n      </button>\r\n      {(this.showProfileMenu)\r\n        ?\r\n        <div className=\"complete-menu\">\r\n          <div className=\"profile-menu\">\r\n            <button\r\n              onClick={() => {\r\n                this.profileBtnSelected = !this.profileBtnSelected;\r\n                this.configBtnSelected = false;\r\n                this.signOutBtnSelected = false;\r\n              }}\r\n              onMouseOver={() => {\r\n                //this.profileBtnOver = true;\r\n                this.profileBtnSelected = true;\r\n              }}\r\n              onMouseOut={() => {\r\n                //this.profileBtnOver = false;\r\n                this.profileBtnSelected = false;\r\n                console.log('lmao');\r\n              }}\r\n              style={{\r\n                backgroundColor: this.profileBtnSelected\r\n                  ? '#35E285'\r\n                  : this.profileBtnOver ? '#C4C4C4' : '#FFFFFF',\r\n              }}>VER PERFIL</button>\r\n            <button className=\"config-btn\"\r\n              onClick={() => {\r\n                this.profileBtnSelected = false;\r\n                this.configBtnSelected = !this.configBtnSelected;\r\n                this.signOutBtnSelected = false;\r\n              }}\r\n              onMouseOver={() => {\r\n                //this.configBtnOver = true;\r\n                this.configBtnSelected = true;\r\n              }}\r\n              onMouseOut={() => {\r\n                //this.configBtnOver = false;\r\n                this.configBtnSelected = false;\r\n                console.log('lmao');\r\n              }}\r\n              style={{\r\n                backgroundColor: this.configBtnSelected\r\n                  ? '#35E285'\r\n                  : this.configBtnOver ? '#C4C4C4' : '#FFFFFF'\r\n              }}>CONFIGURACIÓN</button>\r\n            <button\r\n              onMouseOver={() => {\r\n                //this.signOutBtnOver = true;\r\n                this.signOutBtnSelected = true;\r\n              }}\r\n              onMouseOut={() => {\r\n                //this.signOutBtnOver = false;\r\n                this.signOutBtnSelected = false;\r\n                console.log('lmao');\r\n              }}\r\n              style={{\r\n                backgroundColor: this.signOutBtnSelected\r\n                  ? '#35E285'\r\n                  : this.signOutBtnOver ? '#C4C4C4' : '#FFFFFF'\r\n              }}\r\n              onClick={() => {\r\n                //this.props.history.push(\"/\");\r\n                authStore.signOut();\r\n                console.log('CERRANDO SESIÓN LOL');\r\n\r\n                this.profileBtnSelected = false;\r\n                this.configBtnSelected = false;\r\n                this.signOutBtnSelected = !this.signOutBtnSelected;\r\n                \r\n\r\n              }}>\r\n              CERRAR SESIÓN\r\n          </button>\r\n          </div>\r\n        </div>\r\n        : ''\r\n      }\r\n\r\n    </div>);\r\n  }\r\n}\r\n\r\nexport default observer(ProfileMenu);","import React, { Component } from 'react';\r\nimport './_MainNavBar.scss'\r\nimport { Link, withRouter, Redirect, Route, Router } from 'react-router-dom';\r\n\r\nimport { observer } from 'mobx-react';\r\nimport authStore from '../../stores/authStore';\r\nimport { observable, autorun } from 'mobx';\r\nimport ProfileMenu from '../ProfileMenu/ProfileMenu';\r\n\r\ninterface MainNavBarProps {\r\n    title: string\r\n}\r\n\r\n@observer class MainNavBar extends React.Component<MainNavBarProps> {\r\n\r\n    @observable signInForm: boolean = true;\r\n\r\n    constructor(props: any) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (<div className=\"mainNavBar\">\r\n            <h3>{this.props.title}</h3>\r\n            <ProfileMenu />\r\n        </div>);\r\n    }\r\n}\r\n\r\nexport default observer(MainNavBar);","import React, { Component } from 'react';\r\nimport './_Home.scss'\r\nimport { observer } from 'mobx-react';\r\nimport authStore from '../../stores/authStore';\r\nimport { observable, autorun } from 'mobx';\r\nimport DashMenu from '../DashMenu/DashMenu';\r\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\r\nimport { auth } from 'firebase';\r\nimport genStore from '../../stores/genStore';\r\nimport MainNavBar from '../MainNavBar/MainNavBar';\r\n\r\ninterface HomeProps {\r\n    history: any\r\n}\r\n\r\n@observer class Home extends React.Component<HomeProps> {\r\n\r\n    @observable signInForm: boolean = true;\r\n\r\n    constructor(props: any) {\r\n        super(props);\r\n        autorun(() => {\r\n            (authStore.isLogged) ?\r\n            props.history.push(\"/home\")\r\n            : props.history.push(\"/\")\r\n        });\r\n        \r\n    }\r\n\r\n    render() {\r\n        return (<div className=\"home\">\r\n            <DashMenu />\r\n            <MainNavBar title={genStore.navBarTitle} />\r\n\r\n        </div>);\r\n    }\r\n}\r\n\r\nexport default observer(Home);","import { observable, autorun, action } from 'mobx';\r\nimport firebase from 'firebase';\r\nimport { db } from '../firebaseConfig';\r\nimport authStore from './authStore';\r\n\r\nclass ProjectsStore {\r\n\r\n    @observable username: any = authStore.currentUsername;\r\n    @observable projects: any[] = [];\r\n    @observable text: any = \"\";\r\n    @observable profile_photo: any = \"\";\r\n    @observable audioFileURL: any = \"\";\r\n    @observable audioFileUploaded: boolean = false;\r\n    @observable projectName: any = \"\";\r\n    @observable audioName: any = \"\";\r\n\r\n    constructor() {\r\n\r\n    }\r\n\r\n    @action addProjectToDB(projectName: any, username: any, email: any) {\r\n/*\r\n        db.ref('projects/' + authStore.user.uid).push({\r\n            projectName: projectName,\r\n            username: username,\r\n            email: email,\r\n            creationDate: this.getCurrentDate(),\r\n            audio_file: this.audioFileURL\r\n        }); */\r\n\r\n        this.setAudioFileUploaded(false);\r\n\r\n    }\r\n\r\n    /*\r\n    getProjects = (userId: any) => {\r\n        var projectsDB =\r\n            db.ref('projects/' + userId)\r\n                .limitToLast(500);\r\n        projectsDB.on(\"value\", snapshot => {\r\n            let newProjects: any[] = [];\r\n            snapshot.forEach(child => {\r\n                var project = child.val();\r\n                newProjects.push({\r\n                    projectName: project.projectName,\r\n                    username: project.username,\r\n                    email: project.email,\r\n                    creationDate: project.creationDate\r\n                });\r\n                this.projects = newProjects;\r\n                console.log(this.projects);\r\n            });\r\n        });\r\n    } */\r\n\r\n    getCurrentDate() {\r\n        var today: any = new Date();\r\n        var dd: any = today.getDate();\r\n        var mm: any = today.getMonth() + 1; //January is 0!\r\n        var yyyy: any = today.getFullYear();\r\n        var time = today.getHours() + \":\" + today.getMinutes();\r\n\r\n        if (dd < 10) {\r\n            dd = '0' + dd\r\n        }\r\n\r\n        if (mm < 10) {\r\n            mm = '0' + mm\r\n        }\r\n\r\n        today = mm + '/' + dd + '/' + yyyy + ' ' + time;\r\n        return today;\r\n    }\r\n\r\n    @action setAudioFileUploaded(value: boolean) {\r\n        this.audioFileUploaded = value;\r\n    }\r\n\r\n    @action setAudioName(value: any) {\r\n        this.audioName = value;\r\n    }\r\n\r\n    @action uploadAudioFile(fileContent: string) {\r\n\r\n        let storage = firebase.storage().ref();\r\n        let userEmail = authStore.currentEmail;\r\n        console.log(authStore.currentEmail)\r\n        let user = userEmail.split(\"@\");\r\n        //let audioFile = user[0] + '-' + this.projectName + \".mp3\";\r\n        let file = storage.child('audio_files/' + user[0] + '/' + this.projectName + '/' + this.audioName);\r\n        file.putString(fileContent, 'data_url').then((snapshot: any) => {\r\n            console.log('Uploaded a base64url string!');\r\n            this.retrieveAudioFile();\r\n        });\r\n    }\r\n\r\n    @action retrieveAudioFile() {\r\n\r\n        var storage: any = firebase.storage().ref();\r\n\r\n        let userEmail: any = authStore.currentEmail;\r\n        //let img: any = userEmail.split(\"@\");\r\n        console.log('USER EMAIL:', userEmail);\r\n        let user = userEmail.split(\"@\");\r\n        let audioFile = user[0] + '-' + this.projectName + \".mp3\";\r\n        console.log('audiofilename', audioFile);\r\n\r\n        storage.child('audio_files/' + user[0] + '/' + this.projectName + '/' + this.audioName).getDownloadURL().then((url: any) => {\r\n            // `url` is the download URL for 'images/stars.jpg'\r\n\r\n            // This can be downloaded directly:\r\n            var xhr = new XMLHttpRequest();\r\n            xhr.responseType = 'blob';\r\n            xhr.onload = function (event: any) {\r\n                var blob = xhr.response;\r\n            };\r\n            xhr.open('GET', url);\r\n            xhr.send();\r\n\r\n            this.audioFileURL = url;\r\n            this.setAudioFileUploaded(true);\r\n            // Or inserted into an <img> element:\r\n            console.log('foto: ', url);\r\n            return url;\r\n        }).catch(function (error) {\r\n            // Handle any errors\r\n        });\r\n\r\n    }\r\n\r\n    ///////////\r\n    @observable showNewProjectForm: boolean = false;\r\n\r\n    @action onCreateProject() {\r\n        this.showNewProjectForm = true;\r\n    }\r\n\r\n    @action onCancelProjectCreation() {\r\n        this.showNewProjectForm = false;\r\n    }\r\n\r\n    ///// PROJECT CREATION\r\n\r\n    @observable creationStep = 1;\r\n    @observable stepTitle = 'Detalles del Proyecto'\r\n    @observable monacDistribution = [\r\n        { value: '6', label: 'Hexágono' },\r\n        { value: '4', label: 'Cruz' },\r\n        { value: '5', label: 'Pentágono' }\r\n    ]\r\n    @observable monitoringSystems = [\r\n        { value: 'arbimon', label: 'Arbimon' },\r\n        { value: 'monac', label: 'MONAC' },\r\n        { value: 'audiomoth', label: 'AudioMoth' }\r\n    ]\r\n    @action setStepTitle() {\r\n        switch (this.creationStep) {\r\n            case 0:\r\n                this.showNewProjectForm = false;\r\n                this.creationStep = 1;\r\n                break;\r\n            case 1:\r\n                this.stepTitle = 'Detalles del Proyecto'\r\n                break;\r\n            case 2:\r\n                this.stepTitle = 'Objetivo del proyecto'\r\n                break;\r\n            case 3:\r\n                this.stepTitle = 'Datos recolectados'\r\n                break;\r\n            case 4:\r\n                this.showNewProjectForm = false;\r\n                this.creationStep = 1;\r\n                break;\r\n        }\r\n    }\r\n    @action onNextStepClick() {\r\n        this.creationStep += 1;\r\n        console.log(this.creationStep)\r\n        this.setStepTitle()\r\n    }\r\n\r\n    @action onStepBackClick() {\r\n        this.creationStep -= 1;\r\n        this.setStepTitle()\r\n    }\r\n}\r\n\r\nconst projectsStore = new ProjectsStore();\r\n\r\nexport default projectsStore;","import React, { Component } from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { observable } from 'mobx';\r\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\r\nimport Dropzone from 'react-dropzone';\r\nimport authStore from '../../stores/authStore';\r\nimport projectsStore from '../../stores/projectsStore';\r\nimport { auth } from 'firebase';\r\nimport { withRouter } from 'react-router';\r\n\r\n//import WaveSurfer from 'wavesurfer.js'\r\nimport WaveSurfer from 'react-wavesurfer';\r\n\r\nrequire('wavesurfer.js');\r\n\r\nclass AudioDropzone extends Component {\r\n\r\n    @observable audioFile: any = null;\r\n    @observable audioFileName: string = '';\r\n\r\n    constructor(props: {}) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"audio-dropzone\">\r\n                <Dropzone onDrop={acceptedFiles => {\r\n                    //this.file = acceptedFiles[0];\r\n                    console.log(acceptedFiles[0]);\r\n\r\n                    var reader = new FileReader();\r\n\r\n                    reader.onload = (e: any) => {\r\n                        this.audioFile = e.target.result;\r\n                        projectsStore.setAudioName(acceptedFiles[0].name);\r\n                        console.log('THIS IS THE AUDIO FILE', acceptedFiles[0].name);\r\n                    }\r\n\r\n                    reader.readAsDataURL(acceptedFiles[0]);\r\n                }}>\r\n                    {({ getRootProps, getInputProps }) => (\r\n                        <section className=\"audio-drop-section\" style={{\r\n                            display: this.audioFile\r\n                                ? 'none'\r\n                                : 'flex'\r\n                        }}>\r\n                            <div {...getRootProps()}>\r\n                                <input {...getInputProps()} />\r\n                                <div className=\"add-audio-dropzone\">\r\n                                    {/* <WaveSurfer\r\n                                        audioFile={this.audioFile}\r\n                                        /*pos={this.state.pos}\r\n                                        onPosChange={this.handlePosChange}\r\n                                        playing={this.state.playing}\r\n                                   />*/}\r\n                                    <img src=\"./assets/audio-drop-arrow.png\" alt=\"\" />\r\n                                    <p>.MP3 O .WAV</p>\r\n                                </div>\r\n                            </div>\r\n                        </section>\r\n                    )}\r\n\r\n                </Dropzone>\r\n\r\n                {this.audioFile && <div className=\"user-audio-div\">\r\n                    {/*<img className=\"user-img\" src={this.audioFile} width=\"140\" style={{ borderRadius: '100px' }} />*/}\r\n                    <h3>Perfecto, has seleccionado un audio.</h3>\r\n                    <div className=\"upload-audio-btn\" onClick={() => {\r\n                        projectsStore.uploadAudioFile(this.audioFile);\r\n                        //this.history.push(\"/home\");\r\n                    }}>¡Subir audio!</div>\r\n                    {/*<input type=\"text\" onInput={(e: any) => this.fileName = e.target.value} />*/}\r\n                    {/*<button className=\"subir-img-btn\" >Subir Foto</button>*/}\r\n                </div>}\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default observer(AudioDropzone);","import React, { Component } from 'react';\r\nimport Select from 'react-select'\r\nimport projectsStore from '../../../stores/projectsStore';\r\nimport { observer } from 'mobx-react';\r\nimport AudioDropzone from '../AudioDropzone';\r\n\r\nconst options = [\r\n    { value: 'diana', label: 'diana@icesi.edu.co' },\r\n    { value: 'strawberry', label: 'caarce@icesi.edu.co' },\r\n    { value: 'vanilla', label: 'gustavo@icesi.edu.co' }\r\n]\r\n\r\nclass CreateProject extends Component {\r\n\r\n    constructor(props: {}) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"create-project\">\r\n                <span className=\"title-row\">\r\n                    <img onClick={() => projectsStore.onStepBackClick()} src=\"./assets/gen-icons/back-arrow.svg\" width=\"27px\" alt=\"\" />\r\n                    <h1 >{projectsStore.stepTitle}</h1>\r\n                    <img onClick={() => projectsStore.onCancelProjectCreation()} src=\"./assets/gen-icons/close-x.svg\" width=\"21px\" alt=\"\" />\r\n                </span>\r\n                {\r\n                    (projectsStore.creationStep == 1) ? <section className=\"details\">\r\n                        <form className=\"content\" >\r\n                            <span className=\"question-structure\">\r\n                                <label className=\"green-subtitle\">Nombre del proyecto</label>\r\n                                <input placeholder=\"Escribe el nombre del proyecto\" type=\"text\" />\r\n                            </span>\r\n                            <br />\r\n                            <span className=\"question-structure\">\r\n                                <label className=\"green-subtitle\">Descripción del proyecto</label>\r\n                                <textarea placeholder=\"Resume tu proyecto en unas cuantas palabras...\" name=\"\" id=\"\"></textarea>\r\n                            </span>\r\n                            <br />\r\n                            <span className=\"question-structure\">\r\n                                <label className=\"green-subtitle\">Colegas</label>\r\n                                <Select\r\n                                    isMulti\r\n                                    name=\"colors\"\r\n                                    placeholder=\"Busca colegas por su correo electrónico\"\r\n                                    options={options}\r\n                                    className=\"basic-multi-select\"\r\n                                    classNamePrefix=\"select\"\r\n                                />\r\n                            </span>\r\n                        </form>\r\n                    </section> : (projectsStore.creationStep == 2) ? <section id=\"objective\">\r\n                        <div className=\"location-cont\">\r\n                            <form className=\"content\" >\r\n                                <span className=\"question-structure\">\r\n                                    <label className=\"green-subtitle\">Zona de localización</label>\r\n                                    <input placeholder=\"Ingresa una dirección o coordenadas\" type=\"text\" />\r\n                                </span>\r\n                                <div className=\"map\">\r\n\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                        <div className=\"species-cont\">\r\n                            <span className=\"question-structure\">\r\n                                <label className=\"green-subtitle\">Especies a estudiar</label>\r\n                                <input placeholder=\"Por nombre científico o común\" type=\"text\" />\r\n                            </span>\r\n                            <p className=\"green-link\">Agregar las especies usuales de la zona de estudio</p>\r\n                            <div className=\"species-list-cont\">\r\n\r\n                            </div>\r\n                        </div>\r\n                    </section> : (projectsStore.creationStep == 3) ? <section id=\"data-collection\">\r\n                        <div className=\"method-cont\">\r\n                            <span className=\"question-structure\">\r\n                                <label className=\"green-subtitle\">Modos de recolección</label>\r\n                                <br/>\r\n                                <span className=\"checks-cont\">\r\n                                    <label className=\"check-container\">\r\n                                        <input type=\"checkbox\" />\r\n                                        Por intervalos\r\n                                    <span className=\"checkmark\"></span>\r\n                                    </label>\r\n                                    <label className=\"check-container\">\r\n                                        <input type=\"checkbox\" />\r\n                                        Continua\r\n                                    <span className=\"checkmark\"></span>\r\n                                    </label>\r\n                                </span>\r\n                            </span>\r\n                            <span className=\"row-question-structure\">\r\n                                <label > Duración en minutos\r\n                                </label>\r\n                                <input placeholder=\"0 min\" type=\"number\" />\r\n\r\n\r\n                            </span>\r\n                            <span className=\"row-question-structure\">\r\n                                <label > Frecuencia en el día\r\n                                </label>\r\n                                <input placeholder=\"0\" type=\"number\" />\r\n\r\n                            </span>\r\n\r\n                            <span className=\"question-structure\">\r\n                                <label className=\"green-subtitle\">Tipo de micrófono utilizado</label>\r\n                                <Select\r\n                                    placeholder=\"Escoger dispositivo\"\r\n                                    options={projectsStore.monitoringSystems} />\r\n                            </span>\r\n                            <span className=\"question-structure\">\r\n                                <label className=\"green-subtitle\">Distribución de micrófonos de MONAC utilizada</label>\r\n                                <Select\r\n                                    placeholder=\"Escoger distribución\"\r\n                                    options={projectsStore.monacDistribution} />\r\n                            </span>\r\n\r\n                        </div>\r\n                        <div className=\"audio-cont\">\r\n                            <label className=\"green-subtitle\">Audios recolectados</label>\r\n                            <AudioDropzone></AudioDropzone>\r\n                        </div>\r\n                    </section> : ''\r\n                }\r\n\r\n                <button id=\"nextBtn\" className=\"mainBtn\"\r\n                    onClick={() => projectsStore.onNextStepClick()}\r\n                >Siguiente</button>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default observer(CreateProject);","import React, { Component } from 'react';\r\nimport './_SearchBar.scss'\r\nimport { observer } from 'mobx-react';\r\nimport authStore from '../../stores/authStore';\r\nimport { observable } from 'mobx';\r\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\r\nimport onClickOutside from 'react-onclickoutside'\r\n\r\ninterface SearchBarProps {\r\n    history: any\r\n}\r\n\r\n@observer class SearchBar extends Component {\r\n\r\n    @observable searchBarClicked: boolean = false;\r\n\r\n    constructor(props: any) {\r\n        super(props);\r\n\r\n    }\r\n\r\n    render() {\r\n        return (<div className=\"search-bar\">\r\n            <input className=\"search-txt\" name=\"\" placeholder=\"Buscar Proyectos\"\r\n                onFocus={() => {\r\n                    this.searchBarClicked = true;\r\n                }}\r\n                onBlur={()=>{\r\n                    this.searchBarClicked = false;\r\n                }}\r\n                style={{\r\n                    backgroundColor: this.searchBarClicked\r\n                        ? '#F4F4F4'\r\n                        : '#E5E5E5',\r\n                    borderColor: this.searchBarClicked\r\n                        ? '#E5E5E5'\r\n                        : 'rgba(0,0,0,0)',\r\n                    borderStyle: this.searchBarClicked\r\n                        ? 'solid'\r\n                        : '',\r\n                    borderWidth: this.searchBarClicked\r\n                        ? '1.3px'\r\n                        : '',\r\n                }} />\r\n            <button className=\"search-btn\">Buscar</button>\r\n        </div>);\r\n    }\r\n}\r\n\r\nexport default observer(SearchBar);","import React, { Component } from 'react';\r\nimport SearchBar from '../SearchBar/SearchBar';\r\nimport projectsStore from '../../stores/projectsStore';\r\nimport { observer } from 'mobx-react';\r\n\r\nclass TopBar extends Component {\r\n\r\n    constructor(props: {}) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return <section className=\"project-topbar\">\r\n            <SearchBar></SearchBar>\r\n            <div className=\"actions\">\r\n                <button className=\"green-button\"><img src=\"./assets/gen-icons/folder.svg\" alt=\"\" /> Crear carpeta</button>\r\n                <button className=\"green-button\"\r\n                    onClick={() => {\r\n                        projectsStore.onCreateProject()\r\n                    }}\r\n                >\r\n                    <img src=\"./assets/gen-icons/rocket.svg\" alt=\"\" /> Crear proyecto</button>\r\n            </div>\r\n        </section>\r\n    }\r\n}\r\n\r\nexport default observer(TopBar);","import React, { Component } from 'react';\r\nimport { observer } from 'mobx-react';\r\n\r\ninterface projectCardProps {\r\n    name: string;\r\n    date: string;\r\n}\r\n\r\nconst ProjectCard = observer(({ name, date }: projectCardProps) => {\r\n\r\n    return (<div className=\"project-card\">\r\n        <h4 className=\"project-name\">{name}</h4>\r\n        <img src=\"./assets/gen-icons/rocket.svg\" alt=\"\"/>\r\n        <p className=\"project-date\">{date}</p>\r\n    </div>);\r\n});\r\n\r\nexport default ProjectCard;","import React, { Component } from 'react';\r\nimport './_Projects.scss'\r\nimport { observer } from 'mobx-react';\r\nimport authStore from '../../stores/authStore';\r\nimport projectsStore from '../../stores/projectsStore';\r\nimport { observable, autorun } from 'mobx';\r\nimport DashMenu from '../DashMenu/DashMenu';\r\n\r\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\r\nimport CreateProject from './CreateProject/CreateProject';\r\nimport MainNavBar from '../MainNavBar/MainNavBar';\r\nimport TopBar from './TopBar';\r\nimport ProjectCard from './ProjectCard';\r\nimport genStore from '../../stores/genStore';\r\n\r\ninterface ProjectsProps {\r\n    history: any\r\n}\r\n\r\n@observer class Projects extends React.Component<ProjectsProps> {\r\n\r\n    @observable signInForm: boolean = true;\r\n    @observable newProjectName: any = \"\";\r\n\r\n    constructor(props: any) {\r\n        super(props);\r\n        autorun(() => {\r\n            (authStore.isLogged) ?\r\n                props.history.push(\"/projects\")\r\n                : props.history.push(\"/\")\r\n        });\r\n    }\r\n\r\n    renderProjects = () => {\r\n        return projectsStore.projects.map(project => (<ProjectCard name={project.projectName} date={project.creationDate} ></ProjectCard>))\r\n    }\r\n\r\n    render() {\r\n        return (<div className=\"projects\">\r\n            <DashMenu />\r\n            <div className=\"projects-layout\">\r\n                <MainNavBar title={genStore.navBarTitle} />\r\n                <TopBar />\r\n                <div className=\"projects-div\" style={{\r\n                    alignItems: (projectsStore.projects.length > 0)\r\n                        ? 'flex-start'\r\n                        : 'center',\r\n                    alignContent: (projectsStore.projects.length > 0)\r\n                        ? 'flex-start'\r\n                        : 'center',\r\n                    justifyContent: (projectsStore.projects.length > 0)\r\n                        ? 'flex-start'\r\n                        : 'center'\r\n                }}>\r\n                    {(projectsStore.showNewProjectForm)\r\n                        ? <div className=\"create-project-div\">\r\n                            <CreateProject></CreateProject>\r\n                        </div>\r\n                        : ''}\r\n                    {(projectsStore.projects.length > 0)\r\n                        ? <div className=\"projects-view\">\r\n                            {this.renderProjects()}\r\n                        </div>\r\n                        : <div className=\"no-projects-view\">\r\n                            <img src=\"./assets/birds-illustration.png\" alt=\"\" width=\"220\" />\r\n                            <h3>¡Bienvenido a BioViz, Sebastián!</h3>\r\n                            <p>Aquí aparecerán tus proyectos para que puedas gestionarlos. <br></br> Crea carpertas y organiza.</p>\r\n                            <button onClick={() => {\r\n                                projectsStore.onCreateProject()\r\n                            }}>Crea un nuevo proyecto</button>\r\n                        </div>}\r\n                </div>\r\n            </div>\r\n\r\n        </div>);\r\n    }\r\n}\r\n\r\nexport default observer(Projects);","import React, { Component } from 'react';\r\nimport './App.scss';\r\nimport Login from '../Login/Login';\r\nimport Home from '../Home/Home';\r\nimport { observer } from 'mobx-react';\r\nimport { BrowserRouter as Router, Route, Link, BrowserRouter } from \"react-router-dom\";\r\nimport { HashRouter } from \"react-router-dom\";\r\nimport Projects from '../Projects/Projects';\r\nimport Tagging from '../Tagging/Tagging';\r\ninterface AppProps {\r\n  history: any\r\n}\r\n\r\nclass App extends Component {\r\n  constructor(props: {}) {\r\n    super(props);\r\n\r\n  }\r\n\r\n  render() {\r\n    return (<div className=\"App\">\r\n      <HashRouter>\r\n        <Route exact path=\"/\" component={Login} />\r\n        <Route exact path=\"/home\" component={Home} />\r\n        <Route exact path=\"/projects\" component={Projects} />\r\n      </HashRouter>\r\n    </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default observer(App);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config: any) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: any, config: any) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: any, config: any) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './components/App/App.css';\r\nimport App from './components/App/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();"],"sourceRoot":""}